{"version":3,"sources":["Utils.js","Words.js","Styles.js","CodePoetry.js","index.js"],"names":["getRando","limit","start","Math","floor","random","datamuse","require","alphabet","split","words","request","length","then","json","wordChoice","console","log","word","tags","plural_nouns","nouns","conjunctions","adjectives","rhyming_adjectives","end_phrases","oo","ee","ii","it","ay","styles","fontFamilies","textColors","borderColors","CodePoetry","useState","poem","style","tweet","showInfo","updatePoem","useEffect","build","plural_noun1","adjective1","plural_noun2","noun","adjective3","cojunction","borderDetails","ryhmeChoices","rhymeSound","adjective_rhyme","line1","line2","line3","line4","num","getPhrase","toggleModal","className","href","target","id","onClick","Date","getYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3f9572e.chunk.js","sourcesContent":["export function getRando(limit, start = 0) {\n  const num = Math.floor(Math.random()*(limit-start))+start;\n  return num;\n}","import { getRando } from './Utils.js';\n\n\n// API\nconst datamuse = require('datamuse');\n// datamuse.request('words?ml=ringing in the ears')\n//   .then((json) => {\n//     console.log(json);\n//     //do it!\n//   });\n\n// CREATE SEED\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst seed = datamuse.request(`words?md=p&sp=${alphabet[getRando(alphabet.length)]}*`)\n  .then((json) => {\n    const wordChoice = json[getRando(json.length)];\n    console.log(wordChoice.word)\n    console.log(wordChoice.tags)\n    return wordChoice;\n  });\n\n// console.log(seed)\n// const seedDetails = datamuse.request(`words?sp=${alphabet[getRando(alphabet.length)]}*`)\n// .then((json) => {\n//   const wordChoice = json[getRando(json.length)]['word'];\n//   return wordChoice;\n// });\n\n// WORD LISTS\nexport const words = {\n  plural_nouns: ['roses', 'violets', 'airplanes', 'kittens', 'fishes', 'candies', 'programs', 'slingshots', 'lightbulbs', 'rivers', 'mermaids', 'rainbows', 'daisies', 'lap pools', 'cell phones', 'board games'],\n\n  nouns: ['sugar', 'the car', 'airplane', 'the cat', 'the fish', 'candy', 'the code', 'a sword', 'bright light', 'the squid', 'a whale', 'the cloud', 'flour', 'the pool', 'the phone', 'the game'],\n\n  conjunctions: ['and', 'but', 'yet'],\n\n  adjectives: ['big', 'real', 'small', 'tall', 'long', 'drunk', 'ill', 'right', 'cross', 'mad', 'lax', 'mean', 'coy', 'prime', 'bored', 'fair', 'blonde', 'apt', 'low', 'high', 'wise', 'wry', 'huge', 'quick', 'clean', 'drab', 'plain', 'red', 'blue', 'green', 'black', 'dead', 'odd', 'rich', 'shy', 'sly', 'vast', 'brave', 'calm', 'kind', 'rough', 'rogue', 'wide', 'faint', 'loud', 'late', 'swift', 'light', 'weak', 'wet', 'full', 'cool', 'dark', 'dry', 'apt', 'few', 'sweet'],\n\n  rhyming_adjectives: {\n    'oo': ['blue', 'new', 'few', 'two', 'true'],\n    'ee': ['free', 'three', 'key', 'wee'],\n    'ii': ['fly', 'high'],\n    'it': ['fit', 'lit'],\n    'ay': ['grey', 'okay', 'gay']\n  },\n\n  end_phrases: {\n    oo: ['are you'], \n    ee: ['is she', 'is he', 'are we'],\n    ii: ['am I'], \n    it: ['is it'], \n    ay: ['are they']\n  }\n}","// STYLE LISTS\nexport const styles = {\n  fontFamilies: [\"'Fredericka the Great', cursive\", \"'Lobster Two', cursive\", \"'Nova Flat', cursive\", \"'Righteous', cursive\"],\n  textColors: ['lemonchiffon', 'peachpuff', 'lavender', 'mediumaquamarine', 'paleturquoise', 'powderblue', 'deepskyblue', 'honeydew', 'aliceblue', 'gainsboro'],\n  borderColors: ['gold', 'yellow', 'mediumpurple', 'mediumorchid', 'slateblue', 'limegreen', 'darkturquoise', 'steelblue', 'chocolate', 'lightslategray']\n}","import React, { useState, useEffect } from 'react';\nimport { words } from './Words.js';\nimport { styles } from './Styles.js';\nimport { getRando } from './Utils.js';\n\nfunction CodePoetry() {\n  const intialState = {\n    poem: '',\n    style: {},\n    tweet: 'https://jessmear.github.io/code-poetry/',\n    showInfo: 'modal-hide'\n  };\n  const [poem, updatePoem] = useState(intialState);\n\n  useEffect(() => {\n    build();\n  }, []);\n\n  \n\n  // BUILDING THE POEM\n  const build = () => {\n    const plural_noun1 = words.plural_nouns[getRando(words.plural_nouns.length)];\n    const adjective1 = words.adjectives[getRando(words.adjectives.length)];\n    const plural_noun2 = words.plural_nouns[getRando(words.plural_nouns.length)];\n    const noun = words.nouns[getRando(words.nouns.length)];\n    const adjective3 = words.adjectives[getRando(words.adjectives.length)];\n    const cojunction = words.conjunctions[getRando(words.conjunctions.length)];\n\n    const borderDetails = `${styles.borderColors[getRando(styles.borderColors.length)]} 3px dashed`;\n    const style = { \n      'color': styles.textColors[getRando(styles.textColors.length)],\n      'border': borderDetails,\n      'fontFamily': styles.fontFamilies[getRando(styles.fontFamilies.length)]\n    };\n\n    const ryhmeChoices = ['oo', 'ee', 'ii', 'it', 'ay'];\n\n    const rhymeSound = ryhmeChoices[getRando(ryhmeChoices.length)];\n\n    const adjective_rhyme = words.rhyming_adjectives[rhymeSound][getRando(words.rhyming_adjectives[rhymeSound].length)];\n\n    function getPhrase() {\n      const num = getRando(words.end_phrases[rhymeSound].length);\n      const phraseChoice = words.end_phrases[rhymeSound][num];\n      return phraseChoice;\n    }\n\n    const line1 = `${plural_noun1} are ${adjective1}`;\n    const line2 = `${plural_noun2} are ${adjective_rhyme}`;\n    const line3 = `${noun} is ${adjective3}`;\n    const line4 = `${cojunction} so ${getPhrase()}`;\n\n    const poem = (<ul>\n              <li>-- {plural_noun1} --</li>\n              <li>{line1}</li>\n              <li>{line2}</li>\n              <li>{line3}</li>\n              <li>{line4}</li>\n            </ul>);\n  \n    updatePoem({\n      poem,\n      style,\n      tweet: `${line1} / ${line2} / ${line3} / ${line4} [https://jessmear.github.io/code-poetry/]`,\n      showInfo: 'modal-hide'\n    })\n  }\n\n  const toggleModal = () => {\n    const showInfo = (poem.showInfo == 'modal-show') ? 'modal-hide' : 'modal-show';\n    updatePoem({\n      ...poem,\n      showInfo\n    })\n  }\n\n  const getDate = () => {\n    return new Date().getYear()-100+2000;\n  }\n\n  return (\n    <div className=\"poem-container\">\n\n      <div className=\"poem\" style={poem.style}>{poem.poem}</div>\n      <div className=\"nav\">\n        <a href={`http://twitter.com/intent/tweet?text=${poem.tweet}`}\n              target=\"_blank\" \n              id=\"tweet-quote\">\n                tweet\n          </a>\n        <button onClick={build}>poem again</button>\n        <button id=\"myBtn\" onClick={toggleModal}>?</button>\n      </div>\n\n      <div className={`modal ${poem.showInfo}`}>\n        <div className=\"modal-content\">\n          <span onClick={toggleModal} className=\"close\">&times;</span>\n          <p>Created by <a href=\"http://www.jessmear.com\" target=\"_blank\">Jess Mear</a>, copyright 2019 - {getDate()}.</p>\n          <p>GitHub repo: <a href=\"https://github.com/jessmear/code-poetry\" target=\"_blank\">code-poetry</a></p>\n          <p>This project is using <a href=\"https://www.datamuse.com/api/\" target=\"_blank\">Datamuse API</a> and <a href=\"https://github.com/ansteh/datamuse\" target=\"_blank\">Datamuse NPM module</a>.</p>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default CodePoetry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CodePoetry from './CodePoetry';\nimport './css/styles.css';\nimport './css/modal.css';\n\nReactDOM.render(<CodePoetry />, document.getElementById('root'));\n"],"sourceRoot":""}