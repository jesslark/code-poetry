{"version":3,"sources":["CodePoetry.js","index.js"],"names":["CodePoetry","useState","poem","style","tweet","updatePoem","useEffect","build","plural_nouns","nouns","conjunctions","adjectives","adjectivesThatRhyme","fontFamilies","textColors","borderColors","plural_noun1","getRando","length","adjective1","plural_noun2","noun","adjective3","cojunction","borderDetails","limit","start","Math","floor","random","ryhmeChoices","rhymeSound","adjective_rhyme","end_phrases","oo","ee","ii","it","ay","line1","line2","line3","line4","console","log","num","getPhrase","className","href","target","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bbfbf49.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction CodePoetry() {\n  // STATE\n  const intialState = {\n    poem: '',\n    style: {},\n    tweet: 'https://jessmear.github.io/code-poetry/'\n  };\n  const [poem, updatePoem] = useState(intialState);\n\n  useEffect(() => {\n    build();\n  }, []);\n\n  // GRAMMAR FRAMEWORK\n  /*\n  plural_noun1 are adjective1\n  plural_noun2 are adjective_rhyme\n  noun is adjective3\n  cojunction so ' are you / is she / is he / are we / am I / is it / are they '\n  */\n\n  // WORD LISTS\n  //https://api.datamuse.com/words?rel_jjb=ocean&topics=temperature&md=p\n  const plural_nouns = ['roses', 'violets', 'airplanes', 'kittens', 'fishes', 'candies', 'programs', 'slingshots', 'lightbulbs', 'rivers', 'mermaids', 'rainbows', 'daisies', 'lap pools', 'cell phones', 'board games'];\n  const nouns = ['sugar', 'the car', 'airplane', 'the cat', 'the fish', 'candy', 'the code', 'a sword', 'bright light', 'the squid', 'a whale', 'the cloud', 'flour', 'the pool', 'the phone', 'the game'];\n  const conjunctions = ['and', 'but', 'yet'];\n  const adjectives = ['big', 'real', 'small', 'tall', 'long', 'drunk', 'ill', 'right', 'cross', 'mad', 'lax', 'mean', 'coy', 'prime', 'bored', 'fair', 'blonde', 'apt', 'low', 'high', 'wise', 'wry', 'huge', 'quick', 'clean', 'drab', 'plain', 'red', 'blue', 'green', 'black', 'dead', 'odd', 'rich', 'shy', 'sly', 'vast', 'brave', 'calm', 'kind', 'rough', 'rogue', 'wide', 'faint', 'loud', 'late', 'swift', 'light', 'weak', 'wet', 'full', 'cool', 'dark', 'dry', 'apt', 'few', 'sweet'];\n  const adjectivesThatRhyme = {\n    'oo': ['blue', 'new', 'few', 'two', 'true'],\n    'ee': ['free', 'three', 'key', 'wee'],\n    'ii': ['fly', 'high'],\n    'it': ['fit', 'lit'],\n    'ay': ['grey', 'okay', 'gay']\n}\n\n  // STYLE LISTS\n  const fontFamilies = [\"'Fredericka the Great', cursive\", \"'Lobster Two', cursive\", \"'Nova Flat', cursive\", \"'Righteous', cursive\"];\n  const textColors = ['lemonchiffon', 'peachpuff', 'lavender', 'mediumaquamarine', 'paleturquoise', 'powderblue', 'deepskyblue', 'honeydew', 'aliceblue', 'gainsboro'];\n  const borderColors = ['gold', 'yellow', 'mediumpurple', 'mediumorchid', 'slateblue', 'limegreen', 'darkturquoise', 'steelblue', 'chocolate', 'lightslategray']; \n\n  // BUILDING THE POEM\n  const build = () => {\n    const plural_noun1 = plural_nouns[getRando(plural_nouns.length)];\n    const adjective1 = adjectives[getRando(adjectives.length)];\n    const plural_noun2 = plural_nouns[getRando(plural_nouns.length)];\n    const noun = nouns[getRando(nouns.length)];\n    const adjective3 = adjectives[getRando(adjectives.length)];\n    const cojunction = conjunctions[getRando(conjunctions.length)];\n\n    const font = 'font' + (getRando(1,4));\n    const borderDetails = `${borderColors[getRando(borderColors.length)]} 3px dashed`;\n    const style = { \n      'color': textColors[getRando(textColors.length)],\n      'border': borderDetails,\n      'fontFamily': fontFamilies[getRando(fontFamilies.length)]\n    };\n\n    function getRando(limit, start = 0) {\n      const num = Math.floor(Math.random()*(limit-start))+start;\n      return num;\n    }\n\n    const ryhmeChoices = ['oo', 'ee', 'ii', 'it', 'ay'];\n\n    const rhymeSound = ryhmeChoices[getRando(ryhmeChoices.length)];\n\n    const adjective_rhyme = adjectivesThatRhyme[rhymeSound][getRando(adjectivesThatRhyme[rhymeSound].length)];\n\n    const end_phrases = {\n      oo: ['are you'], \n      ee: ['is she', 'is he', 'are we'], \n      ii: ['am I'], \n      it: ['is it'], \n      ay: ['are they']\n    };\n\n    function getPhrase() {\n      console.log(end_phrases[rhymeSound])\n      const num = getRando(end_phrases[rhymeSound].length);\n      const phraseChoice = end_phrases[rhymeSound][num];\n      return phraseChoice;\n      // return 'end phrase';\n    }\n\n    const line1 = `${plural_noun1} are ${adjective1}`;\n    const line2 = `${plural_noun2} are ${adjective_rhyme}`;\n    const line3 = `${noun} is ${adjective3}`;\n    const line4 = `${cojunction} so ${getPhrase()}`;\n\n    const poem = (<ul>\n              <li>-- {plural_noun1} --</li>\n              <li>{line1}</li>\n              <li>{line2}</li>\n              <li>{line3}</li>\n              <li>{line4}</li>\n            </ul>);\n  \n    updatePoem({\n      poem,\n      style,\n      tweet: `${line1} / ${line2} / ${line3} / ${line4} [https://jessmear.github.io/code-poetry/]`\n    })\n  }\n\n  \n\n  return (\n    <div className=\"poem-container\">\n      <div className=\"poem\" style={poem.style}>{poem.poem}</div>\n      <div className=\"nav\">\n        <a href={`http://twitter.com/intent/tweet?text=${poem.tweet}`}\n              target=\"_blank\" \n              id=\"tweet-quote\">\n                tweet\n          </a>\n        {/* <button>save</button> */}\n        <button onClick={build}>poem again</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CodePoetry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CodePoetry from './CodePoetry';\nimport './css/styles.css';\n\nReactDOM.render(<CodePoetry />, document.getElementById('root'));\n"],"sourceRoot":""}