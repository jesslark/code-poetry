{"version":3,"sources":["Styles.js","Utils.js","CodePoetry.js","index.js"],"names":["styles","fontFamilies","textColors","borderColors","getRandomNumber","limit","start","Math","floor","random","getDate","Date","getYear","getRandomLetter","blockList","alphabet","split","length","shuffleArray","array","i","j","nounVerbAdj1","nounVerbAdj2","datamuse","require","CodePoetry","useState","poem","style","tweet","showInfo","updatePoem","adjective1","setAdjective1","adjective2","setAdjective2","noun1","setNoun1","noun2","setNoun2","noun3","setNoun3","verb1","setVerb1","verb2","setVerb2","conjunction","setConjunction","phrase","setPhrase","useEffect","build","setWord","setThisState","syllableCount","partOfSpeech","request","then","data","wordChoice","find","word","numSyllables","tags","conjunctions","phrases","borderDetails","line1","line2","line3","console","log","toggleModal","className","href","target","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aba9271d.chunk.js","sourcesContent":["// STYLE LISTS\nexport const styles = {\n  fontFamilies: [\"'Fredericka the Great', cursive\", \"'Lobster Two', cursive\", \"'Nova Flat', cursive\", \"'Righteous', cursive\"],\n  textColors: ['lemonchiffon', 'peachpuff', 'lavender', 'mediumaquamarine', 'paleturquoise', 'powderblue', 'deepskyblue', 'honeydew', 'aliceblue', 'gainsboro'],\n  borderColors: ['gold', 'yellow', 'mediumpurple', 'mediumorchid', 'slateblue', 'limegreen', 'darkturquoise', 'steelblue', 'chocolate', 'lightslategray']\n}","export function getRandomNumber(limit, start = 0) {\n  const num = Math.floor(Math.random()*(limit-start))+start;\n  return num;\n}\n\nexport const getDate = () => {\n  return new Date().getYear()-100+2000;\n}\n\nexport const getRandomLetter = blockList => {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\n  return alphabet[getRandomNumber(alphabet.length)]\n}\n\nexport const shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport const nounVerbAdj1 = [\"back\",\n\"best\",\n\"clean\",\n\"clear\",\n\"close\",\n\"cod\",\n\"damn\",\n\"down\",\n\"fair\",\n\"fast\",\n\"fine\",\n\"firm\",\n\"flush\",\n\"free\",\n\"full\",\n\"home\",\n\"last\",\n\"light\",\n\"low\",\n\"out\",\n\"pat\",\n\"plain\",\n\"plumb\",\n\"plump\",\n\"pop\",\n\"right\",\n\"rough\",\n\"round\",\n\"short\",\n\"square\",\n\"still\",\n\"true\",\n\"well\",\n\"worst\",\n\"wrong\"]\n\nexport const nounVerbAdj2 = [\"back\",\n\"better\",\n\"bitter\",\n\"broadside\",\n\"collect\",\n\"counter\",\n\"crisscross\",\n\"double\",\n\"even\",\n\"express\",\n\"forward\",\n\"jolly\",\n\"quiet\",\n\"second\",\n\"solo\",\n\"steady\",\n\"tiptoe\",\n\"upstage\",\n\"wholesale\",\n\"zigzag\"]","import React, { useState, useEffect } from 'react';\nimport { styles } from './Styles.js';\nimport { getRandomNumber, getDate, getRandomLetter, shuffleArray, nounVerbAdj1, nounVerbAdj2 } from './Utils.js';\n\nconst datamuse = require('datamuse');\n\nfunction CodePoetry() {\n  const intialState = {\n    poem: '',\n    style: {},\n    tweet: 'https://jessmear.github.io/code-poetry/',\n    showInfo: 'modal-hide'\n  };\n  const [poem, updatePoem] = useState(intialState);\n  const [adjective1, setAdjective1] = useState('short');\n  const [adjective2, setAdjective2] = useState('still');\n  const [noun1, setNoun1] = useState('blade');\n  const [noun2, setNoun2] = useState('grass');\n  const [noun3, setNoun3] = useState('breezes');\n  const [verb1, setVerb1] = useState('bends');\n  const [verb2, setVerb2] = useState('sways');\n  const [conjunction, setConjunction] = useState('and');\n  const [phrase, setPhrase] = useState('now it is');\n\n  useEffect(() => {\n    build();\n  }, []);\n\n  const setWord = (setThisState, syllableCount = 1, partOfSpeech = \"n\") => {\n    datamuse.request(`words?max=200&md=ps&sp=${getRandomLetter()}*`)\n      .then((data) => {\n        shuffleArray(data)\n        let wordChoice = data.find(word => {\n          if(word.numSyllables == syllableCount) {\n            if(word.tags && word.tags[0] == partOfSpeech) {\n              return true\n            }\n          }\n        })\n        wordChoice = wordChoice \n        ? wordChoice.word \n        : syllableCount == 1 \n          ? nounVerbAdj1[getRandomNumber(nounVerbAdj1.length)]\n          : nounVerbAdj2[getRandomNumber(nounVerbAdj2.length)]\n\n        setThisState(wordChoice)\n      });\n  }\n\n  const conjunctions = [\"for\",\"and\",\"nor\",\"but\",\"or\",\"yet\",\"so\"]\n  const phrases = [\"now it is\", \"then it was\", \"soon it be\", \"next it is\", \"then it is\", \"now we are\", \"then they were\", \"soon we were\", \"next they were\", \"then they are\"]\n\n  // BUILDING THE POEM\n  const build = () => {\n    setWord(setAdjective1, 1, \"adj\")\n    setWord(setAdjective2, 1, \"adj\")\n    setWord(setNoun1, 1)\n    setWord(setNoun2, 1)\n    setWord(setNoun3, 2)\n    setWord(setVerb1, 1, \"v\")\n    setWord(setVerb2, 1, \"v\")\n    setConjunction(conjunctions[getRandomNumber(conjunctions.length)])\n    setPhrase(phrases[getRandomNumber(phrases.length)])\n\n\n\n    const borderDetails = `${styles.borderColors[getRandomNumber(styles.borderColors.length)]} 3px dashed`;\n    const style = { \n      'color': styles.textColors[getRandomNumber(styles.textColors.length)],\n      'border': borderDetails,\n      'fontFamily': styles.fontFamilies[getRandomNumber(styles.fontFamilies.length)]\n    };\n\n\n\n    const line1 = `a ${adjective1} ${noun1} of ${noun2}`;\n    const line2 = `${verb1} and ${verb2} in the ${noun3}`;\n    const line3 = `${conjunction} ${phrase} ${adjective2}`;\n\n    const poem = (<ul>\n              <li>{line1}</li>\n              <li>{line2}</li>\n              <li>{line3}</li>\n            </ul>);\n    const tweet = `${line1} / ${line2} / ${line3}`\n    console.log(tweet)\n    updatePoem({\n      poem,\n      style,\n      tweet: `${tweet} [https://jessmear.github.io/code-poetry/]`,\n      showInfo: 'modal-hide'\n    })\n  }\n\n  const toggleModal = () => {\n    const showInfo = (poem.showInfo == 'modal-show') ? 'modal-hide' : 'modal-show';\n    updatePoem({\n      ...poem,\n      showInfo\n    })\n  }\n\n  return (\n    <div className=\"poem-container\">\n\n      <div className=\"poem\" style={poem.style}>{poem.poem}</div>\n      <div className=\"nav\">\n        <a href={`http://twitter.com/intent/tweet?text=${poem.tweet}`}\n              target=\"_blank\" \n              id=\"tweet-quote\">\n                tweet\n          </a>\n        <button onClick={build}>poem again</button>\n        <button id=\"myBtn\" onClick={toggleModal}>?</button>\n      </div>\n\n      <div className={`modal ${poem.showInfo}`}>\n        <div className=\"modal-content\">\n          <span onClick={toggleModal} className=\"close\">&times;</span>\n          <p>Created by <a href=\"http://www.jessmear.com\" target=\"_blank\">Jess Mear</a>, copyright 2019 - {getDate()}.</p>\n          <p>GitHub repo: <a href=\"https://github.com/jessmear/code-poetry\" target=\"_blank\">code-poetry</a></p>\n          <p>This project is using <a href=\"https://www.datamuse.com/api/\" target=\"_blank\">Datamuse API</a> and <a href=\"https://github.com/ansteh/datamuse\" target=\"_blank\">Datamuse NPM module</a>.</p>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default CodePoetry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CodePoetry from './CodePoetry';\nimport './css/styles.css';\nimport './css/modal.css';\n\nReactDOM.render(<CodePoetry />, document.getElementById('root'));\n"],"sourceRoot":""}