{"version":3,"sources":["Utils.js","Words.js","Styles.js","CodePoetry.js","index.js"],"names":["getRando","limit","start","Math","floor","random","require","words","plural_nouns","nouns","conjunctions","links","adjectives","rhyming_adjectives","end_phrases","oo","ee","ii","ay","ust","un","styles","fontFamilies","textColors","borderColors","CodePoetry","useState","poem","style","tweet","showInfo","updatePoem","useEffect","build","plural_noun1","length","adjective1","plural_noun2","noun","adjective3","cojunction","link","borderDetails","ryhmeChoices","rhymeSound","adjective_rhyme","line1","line2","line3","line4","num","getPhrase","console","log","toggleModal","className","href","target","id","onClick","Date","getYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28d76a14.chunk.js","sourcesContent":["export function getRando(limit, start = 0) {\n  const num = Math.floor(Math.random()*(limit-start))+start;\n  return num;\n}","import { getRando } from './Utils.js';\n\n\n// API\nconst datamuse = require('datamuse');\n// datamuse.request('words?ml=ringing in the ears')\n//   .then((json) => {\n//     console.log(json);\n//     //do it!\n//   });\n\n// CREATE SEED\n// const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n// const seed = datamuse.request(`words?md=p&sp=${alphabet[getRando(alphabet.length)]}*`)\n//   .then((json) => {\n//     const wordChoice = json[getRando(json.length)];\n//     console.log(wordChoice.word)\n//     console.log(wordChoice.tags)\n//     return wordChoice;\n//   });\n\n// console.log(seed)\n// const seedDetails = datamuse.request(`words?sp=${alphabet[getRando(alphabet.length)]}*`)\n// .then((json) => {\n//   const wordChoice = json[getRando(json.length)]['word'];\n//   return wordChoice;\n// });\n\n// WORD LISTS\nexport const words = {\n  plural_nouns: ['roses', 'violets', 'airplanes', 'kittens', 'fishes', 'candies', 'programs', 'slingshots', 'lightbulbs', 'rivers', 'mermaids', 'rainbows', 'daisies', 'lap pools', 'cell phones', 'board games', 'pizzas', 'Fridays', 'popsicles', 'rain clouds', 'thirteens', 'bunnies', 'Legos', 'some words'],\n\n  nouns: ['sugar', 'the car', 'airplane', 'the cat', 'the fish', 'candy', 'the code', 'a sword', 'bright light', 'the squid', 'a whale', 'the cloud', 'flour', 'the pool', 'the phone', 'the game', 'flower', 'blanket', 'prism', 'Tuesday', 'a brick', 'laptop'],\n\n  conjunctions: ['and', 'but', 'yet'],\n\n  links: ['so', 'now', 'sure', 'light', 'true'],\n\n  adjectives: ['big', 'real', 'small', 'tall', 'long', 'drunk', 'ill', 'right', 'cross', 'mad', 'lax', 'mean', 'coy', 'prime', 'bored', 'fair', 'blonde', 'apt', 'low', 'high', 'wise', 'wry', 'huge', 'quick', 'clean', 'drab', 'plain', 'red', 'blue', 'green', 'black', 'dead', 'odd', 'rich', 'shy', 'sly', 'vast', 'brave', 'calm', 'kind', 'rough', 'rogue', 'wide', 'faint', 'loud', 'late', 'swift', 'light', 'weak', 'wet', 'full', 'cool', 'dark', 'dry', 'apt', 'few', 'sweet', 'good', 'wrong'],\n\n  rhyming_adjectives: {\n    'oo': ['blue', 'new', 'few', 'two', 'true'],\n    'ee': ['free', 'three', 'key', 'wee'],\n    'ii': ['fly', 'high'],\n    'ay': ['grey', 'okay', 'fey'],\n    'ust': ['rust', 'mussed', 'non-plussed'],\n    'un': ['fun', 'one', 'done']\n  },\n\n  end_phrases: {\n    oo: ['are you'],\n    ee: ['is she', 'is he', 'are we'],\n    ii: ['am I'],\n    ay: ['are they'],\n    ust: ['we must'],\n    un: [\"it's done\"]\n  }\n}\n","// STYLE LISTS\nexport const styles = {\n  fontFamilies: [\"'Fredericka the Great', cursive\", \"'Lobster Two', cursive\", \"'Nova Flat', cursive\", \"'Righteous', cursive\"],\n  textColors: ['lemonchiffon', 'peachpuff', 'lavender', 'mediumaquamarine', 'paleturquoise', 'powderblue', 'deepskyblue', 'honeydew', 'aliceblue', 'gainsboro'],\n  borderColors: ['gold', 'yellow', 'mediumpurple', 'mediumorchid', 'slateblue', 'limegreen', 'darkturquoise', 'steelblue', 'chocolate', 'lightslategray']\n}","import React, { useState, useEffect } from 'react';\nimport { words } from './Words.js';\nimport { styles } from './Styles.js';\nimport { getRando } from './Utils.js';\n\nfunction CodePoetry() {\n  const intialState = {\n    poem: '',\n    style: {},\n    tweet: 'https://jessmear.github.io/code-poetry/',\n    showInfo: 'modal-hide'\n  };\n  const [poem, updatePoem] = useState(intialState);\n\n  useEffect(() => {\n    build();\n  }, []);\n\n  \n\n  // BUILDING THE POEM\n  const build = () => {\n    const plural_noun1 = words.plural_nouns[getRando(words.plural_nouns.length)];\n    const adjective1 = words.adjectives[getRando(words.adjectives.length)];\n    const plural_noun2 = words.plural_nouns[getRando(words.plural_nouns.length)];\n    const noun = words.nouns[getRando(words.nouns.length)];\n    const adjective3 = words.adjectives[getRando(words.adjectives.length)];\n    const cojunction = words.conjunctions[getRando(words.conjunctions.length)];\n    const link = words.links[getRando(words.links.length)];\n\n    const borderDetails = `${styles.borderColors[getRando(styles.borderColors.length)]} 3px dashed`;\n    const style = { \n      'color': styles.textColors[getRando(styles.textColors.length)],\n      'border': borderDetails,\n      'fontFamily': styles.fontFamilies[getRando(styles.fontFamilies.length)]\n    };\n\n    const ryhmeChoices = ['oo', 'ee', 'ii', 'ay', 'ust', 'un'];\n\n    const rhymeSound = ryhmeChoices[getRando(ryhmeChoices.length)];\n\n    const adjective_rhyme = words.rhyming_adjectives[rhymeSound][getRando(words.rhyming_adjectives[rhymeSound].length)];\n\n    function getPhrase() {\n      const num = getRando(words.end_phrases[rhymeSound].length);\n      const phraseChoice = words.end_phrases[rhymeSound][num];\n      return phraseChoice;\n    }\n\n    const line1 = `${plural_noun1} are ${adjective1}`;\n    const line2 = `${plural_noun2} are ${adjective_rhyme}`;\n    const line3 = `${noun} is ${adjective3}`;\n    const line4 = `${cojunction} ${link} ${getPhrase()}`;\n\n    console.log(`${line1} / ${line2} / ${line3} / ${line4}`)\n\n    const poem = (<ul>\n              <li>-- {plural_noun1} --</li>\n              <li>{line1}</li>\n              <li>{line2}</li>\n              <li>{line3}</li>\n              <li>{line4}</li>\n            </ul>);\n  \n    updatePoem({\n      poem,\n      style,\n      tweet: `${line1} / ${line2} / ${line3} / ${line4} [https://jessmear.github.io/code-poetry/]`,\n      showInfo: 'modal-hide'\n    })\n  }\n\n  const toggleModal = () => {\n    const showInfo = (poem.showInfo == 'modal-show') ? 'modal-hide' : 'modal-show';\n    updatePoem({\n      ...poem,\n      showInfo\n    })\n  }\n\n  const getDate = () => {\n    return new Date().getYear()-100+2000;\n  }\n\n  return (\n    <div className=\"poem-container\">\n\n      <div className=\"poem\" style={poem.style}>{poem.poem}</div>\n      <div className=\"nav\">\n        <a href={`http://twitter.com/intent/tweet?text=${poem.tweet}`}\n              target=\"_blank\" \n              id=\"tweet-quote\">\n                tweet\n          </a>\n        <button onClick={build}>poem again</button>\n        <button id=\"myBtn\" onClick={toggleModal}>?</button>\n      </div>\n\n      <div className={`modal ${poem.showInfo}`}>\n        <div className=\"modal-content\">\n          <span onClick={toggleModal} className=\"close\">&times;</span>\n          <p>Created by <a href=\"http://www.jessmear.com\" target=\"_blank\">Jess Mear</a>, copyright 2019 - {getDate()}.</p>\n          <p>GitHub repo: <a href=\"https://github.com/jessmear/code-poetry\" target=\"_blank\">code-poetry</a></p>\n          {/* <p>This project is using <a href=\"https://www.datamuse.com/api/\" target=\"_blank\">Datamuse API</a> and <a href=\"https://github.com/ansteh/datamuse\" target=\"_blank\">Datamuse NPM module</a>.</p> */}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default CodePoetry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CodePoetry from './CodePoetry';\nimport './css/styles.css';\nimport './css/modal.css';\n\nReactDOM.render(<CodePoetry />, document.getElementById('root'));\n"],"sourceRoot":""}